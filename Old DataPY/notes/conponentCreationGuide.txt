================================================================================
                        DATAPY INSTALLATION AND COMPONENT CREATION GUIDE
================================================================================

Table of Contents
-----------------
1. Installation
2. Quick Start
3. Component Categories
4. Creating Your First Component
5. Component Development Workflow
6. Testing Components
7. Common Patterns
8. Troubleshooting

================================================================================
1. INSTALLATION
================================================================================

Prerequisites
-------------
- Conda
- Git (recommended)

Step 1: Get DataPY
------------------
   From Source (Development)
   git clone https://github.com/your-org/datapy.git
   cd datapy
   python -m venv venv
   source venv/bin/activate
   pip install -e .


Step 2: Verify Installation
---------------------------
   pype --version
   python py_env_check.py

Should see: "All DataPY packages present!"

================================================================================
2. QUICK START
================================================================================

Initialize Registry
-------------------
   pype register --all        # Register built-in components
   pype list                  # See all registered components
   pype info echo             # View component details

Create First Component
----------------------
   pype create-component      # Interactive creation
   
Follow the prompts to create your component

Register and Test
-----------------
   pype register my_component --from-package
   pype list --category transform

================================================================================
3. COMPONENT CATEGORIES
================================================================================

+----------+------------------------------------+------------------+
| Category | Purpose                            | Examples         |
+----------+------------------------------------+------------------+
| source   | Read data from external sources   | read_csv          | 
|          |                                    | extract_oracle   | 
+----------+------------------------------------+------------------+
| sink     | Write data to destinations        | write_postgres    |
|          |                                    | save_excel       |           
+----------+------------------------------------+------------------+
| transform| Transform and manipulate data     | filter_rows       | 
|          |                                    | map_columns      |           
+----------+------------------------------------+------------------+
| quality  | Validate and ensure data quality  | validate_schema   | 
|          |                                    | check_nulls      |       
+----------+------------------------------------+------------------+
| utility  | Provide utility functionality     | cache_lookup      |
|          |                                    | convert_timezone |
+----------+------------------------------------+------------------+
| misc     | Custom/general purpose            | process_orders    |
|          |                                    | calculate_metrics|
+----------+------------------------------------+------------------+

Naming Convention
-----------------
Pattern: {action}_{system/format}_{optional_detail}

Good Examples:
   read_csv              (source)
   write_postgres        (sink)
   filter_rows           (transform)
   validate_schema       (quality)
   cache_dataframe       (utility)
   process_orders        (misc)

Avoid:
   csv_processor         (use read_csv instead)
   data_handler          (use specific action)
   generic_component     (be specific)

================================================================================
4. CREATING YOUR FIRST COMPONENT
================================================================================

Interactive Creation
--------------------
Run: pype create-component

The tool will ask for:
   1. Component name (e.g., filter_active_users)
   2. Category (source, sink, transform, quality, utility, misc)
   3. Version (default: 1.0.0)
   4. Author name&id
   5. Description
   6. Startable? (can start pipeline)
   7. Multi-input? (accept multiple connections)
   8. Advanced options (global variables, dependencies)

Non-Interactive Creation
------------------------
   pype create-component my_transform --category transform --non-interactive

Generated File Structure
-------------------------
   pype/components/{category}/{component_name}.py

The tool creates a complete component template with:
   - Proper class structure
   - Required metadata
   - Configuration schema
   - Execute method template
   - Lifecycle hooks (for source/sink)
   - Implementation checklist

================================================================================
5. COMPONENT DEVELOPMENT WORKFLOW
================================================================================

Step 1: Create Component
------------------------
   pype create-component my_awesome_filter --category transform

Step 2: Edit Generated File
---------------------------
Open: pype/components/transform/my_awesome_filter.py

The file contains:
   - Class definition with all required metadata
   - Configuration schema to customize
   - Execute method to implement
   - TODO checklist for implementation

Step 3: Implement Your Logic
----------------------------
Focus on the execute method:
   - Get input data from inputs dictionary
   - Process the data using pandas/dask
   - Return output data wrapped in PipelineData

Step 4: Update Configuration
----------------------------
Modify CONFIG_SCHEMA with your parameters:
   - Required parameters (must be provided)
   - Optional parameters (with defaults)

Step 5: Register Component
--------------------------
   pype register my_awesome_filter --from-package
   pype info my_awesome_filter

Step 6: Test in Job
-------------------
Create a YAML job file and test your component

================================================================================
								END 
================================================================================